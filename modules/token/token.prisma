model PrismaToken {
    address             String              @id
    symbol              String
    name                String
    decimals            Int

    logoURI             String?
    priority            Int                 @default(0)
    coingeckoPlatformId String?
    coingeckoContractAddress String?
    coingeckoTokenId    String?

    prices              PrismaTokenPrice[]
    types               PrismaTokenType[]

    poolTokenSnapshots  PrismaBalancerPoolTokenSnapshot[]
    expandedPools       PrismaPoolExpandedTokens[]
    poolTokens          PrismaPoolToken[]
}

model PrismaTokenPrice {
    tokenAddress        String
    token               PrismaToken         @relation(fields:[tokenAddress], references: [address])
    updatedAt           DateTime             @updatedAt
    timestamp           Int
    price               Float
    coingecko           Boolean?

    high                Float
    low                 Float
    open                Float
    close               Float

    @@id([tokenAddress, timestamp])
}

model PrismaTokenType {
    id                  String              @id
    tokenAddress        String
    token               PrismaToken         @relation(fields:[tokenAddress], references: [address])
    type                PrismaTokenTypeOption

    @@unique([tokenAddress, type])
}

enum PrismaTokenTypeOption {
    WHITE_LISTED
    BPT
    PHANTOM_BPT
    LINEAR_WRAPPED_TOKEN
}